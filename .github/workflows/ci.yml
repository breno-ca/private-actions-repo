name: Continuous Integration
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  run:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.20.13

      - name: Add git credentials
        env:
          TOKEN: ${{ secrets.RUNNER_DEP_HANDLER }}
        run: git config --global url.https://$TOKEN@github.com.insteadOf https://github.com

      - name: Update Dependencies
        env:
          GOPRIVATE: github.com/breno-ca/private-repo
        run: |
          go env -w GOPRIVATE=$GOPRIVATE && \
          go mod tidy

      - name: Prepare to cache docker images
        run: mkdir -p ~/image-cache
      
      - name: Setup caching
        id : image-cache
        uses: actions/cache@v4
        with:
          path: ~/image-cache
          key: image-cache-${{ runner.os }}
      
      - name: Pull again if cache miss
        if: steps.image-cache.outputs.cache-hit != 'true'
        run: |
          docker pull mysql:8.0.36; \
          docker save -o ~/image-cache/mysql-8.0.36.tar mysql:8.0.36
          docker pull redis:7; \
          docker save -o ~/image-cache/redis-7.tar redis:7

      - name: Get cache if hit
        if: steps.image-cache.outputs.cache-hit == 'true'
        run: |
          docker load -i ~/image-cache/mysql-8.0.36.tar; \
          docker load -i ~/image-cache/redis-7.tar

      - name: Create deploy.txt
        run: touch deploy.txt

      - name: SCP to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_SSH }}
          source: "deploy.txt"
          target: "~/"

      - name: SSH to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.AWS_SSH }}
          HOST: ${{ secrets.AWS_HOST }}
          USER: ${{ secrets.AWS_USER }}
        run: |
          echo "$PRIVATE_KEY" > /home/runner/.ssh/oidc-test.pem && chmod 600 /home/runner/.ssh/oidc-test.pem; \
          ssh -o StrictHostKeyChecking=no -i /home/runner/.ssh/oidc-test.pem $USER@$HOST '
            
            echo "echo >> funcionou" 
            '


      #      - name: Touch a file in EC2 with SSH
      #        uses: easingthemes/ssh-deploy@v5.0.3
      #        with:
      #          SSH_PRIVATE_KEY: ${{ secrets.AWS_SSH }}
      #          REMOTE_HOST: ${{ secrets.AWS_HOST }}
      #          REMOTE_USER: ${{ secrets.AWS_USER }}
      #          SCRIPT_AFTER: |
      #            touch > newfile.txt
          
      - name: Run Main
        env:
          TOKEN: ${{ secrets.TEST_TOKEN }}
        run: TEST_TOKEN=$TOKEN go run main.go
