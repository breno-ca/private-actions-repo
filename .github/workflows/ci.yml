name: Continuous Integration
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  run:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.20.13

      - name: Add git credentials
        env:
          TOKEN: ${{ secrets.RUNNER_DEP_HANDLER }}
        run: git config --global url.https://$TOKEN@github.com.insteadOf https://github.com

      - name: Update Dependencies
        env:
          GOPRIVATE: github.com/breno-ca/private-repo
        run: |
          go env -w GOPRIVATE=$GOPRIVATE && \
          go mod tidy

      - name: Prepare to cache docker images
        run: mkdir -p ~/image-cache
      
      - name: Setup caching
        id : image-cache
        uses: actions/cache@v4
        with:
          path: ~/image-cache
          key: image-cache-${{ runner.os }}
      
      - name: Pull again if cache miss
        if: steps.image-cache.outputs.cache-hit != 'true'
        run: |
          docker pull mysql:8.0.36; \
          docker save -o ~/image-cache/mysql-8.0.36.tar mysql:8.0.36
          docker pull redis:7; \
          docker save -o ~/image-cache/redis-7.tar redis:7

      - name: Get cache if hit
        if: steps.image-cache.outputs.cache-hit == 'true'
        run: |
          docker load -i ~/image-cache/mysql-8.0.36.tar; \
          docker load -i ~/image-cache/redis-7.tar

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::993567414591:role/github-actions-runner-identifier
          aws-region: us-east-1

      - name: Touch a file in EC2 with SSH
        uses: easingthemes/ssh-deploy@v5.0.3
        with:
          SSH_PRIVATE_KEY: ${{ secrets.AWS_SSH }}
          REMOTE_HOST: ${{ secrets.AWS_HOST }}
          REMOTE_USER: ${{ secrets.AWS_USER }}
          SCRIPT_AFTER: |
            touch > newfile.txt
          
      - name: Run Main
        env:
          TOKEN: ${{ secrets.TEST_TOKEN }}
        run: TEST_TOKEN=$TOKEN go run main.go
